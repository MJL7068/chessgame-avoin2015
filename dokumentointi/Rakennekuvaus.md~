##Rakennekuvaus

Ohjelmaan on tallennettu joukko nappuloita, joille on määritelty sijainti. Nappuloiden sijaintia voidaan muutella. Jokainen nappula toteuttaa jotain Piece-luokan alaluokkaa, joka määrittelee sen, miten nappulaa voidaan liikuttaa ja onko jokin luokka tietystä ruudusta toiseen laillinen. Joukosta poistetaan nappula, jos sen päälle siirretään jokin toinen nappula.

Ohjelmassa on Board-luokka, johon on tallennettu Pieces-luokka, joka säilyttää nappuloita. Boardin metodit antavat komentoja Pieces-luokalle nappuloiden siirtämisen suhteen. Board tarkistaa onko haluttu siirto laillinen, minkä jälkeen se antaa komennon siirron suorittamiseen. Pieces vastaa nappuloiden poistosta ja siirtämisestä. Lisäksi Pieces-luokan metodit mahdollistavat eri nappuloiden hakemisen. Board säilyttää myös tietoja pelin kulusta, kuten vuoron numeron.

Ohjelmalla on UserInterface-luokka, jonka komponentit on jaettu ChessBoard-luokkaan ja joukkoon Square-luokkia. Kun luodaan UserInterface-luokka, se hakee Boardilta tiedot nappuloiden sijainnista. Näiden tietojen perusteella se rakentaa käyttöliittymän. Käyttöliittymän keskellä on shakkilauta, joka koostuu 8 x 8 Square-olion JPanel ilmentymästä. Jokaisessa ruudussa on JButton. Luodessa ruutua käyttöliittymä hakee tiedon siitä, onko juuri siinä ruudussa nappula. Jos on, niin sitten ruudun päälle haetaan nappulaa kuvaava kuva. Muuten ruudussa ei ole mitään. Kun ruutujen JButtoneita klikkaillaan, ne antavat Boardille tietoja siitä minkä ruudun nappulaa halutaan siirtää mihinkin ruutuun. Board suorittaa siirron, jonka jälkeen se päivittää käyttöliittymän. Käyttöliittymä hakee taas tiedot nappuloiden sijainnista ja rakentaa käyttöliittymän uudestaan niiden tietojen perusteella.

Nappuloiden lisäksi käyttöliittymässä näytetään tietoja, kuten pelaajan nimi ja pelin kulkuun liittyvät kommentit. Esim. yrittäessä klikata vastustajan nappulaa tai yrittäessä siirtää nappulaa väärään paikkaan, Board ei muuta nappuloiden paikkoja vaan vain lisää kommentin joka kertoo siitä, miksi pelaajan toiminta oli virheellinen. Tämän jälkeen käyttöliittymää päivitetään ja kommenttiruudun sisältö muuttuu. Näin pelaaja saa tietoa pelin tapahtumista ja ymmärtää mitä teki väärin.

Käyttöliittymässä on muitakin JButtoneita, joilla on erilaisia toimintoja. Reset luo Boardille uuden Pieces-olion ja nollaa muut tiedot, jonka seurauksena peli palaa alkutekijöihinsä. Save ja Load mahdollistavat pelin tallentamisen ja jatkamisen myöhemmin. Save tallentaa pelin tiedot String-muodossa tekstitiedostoon. Load taas hakee tallennetun Stringin ja rakentaa pelitilanteen uudestaa antamalla Boardille tiedot tallennetusta pelistä. Tallentaessa tiedot kirjoitetaan alkuperäisen tiedoston päälle, minkä takia on mahdollista säilyttää vain yhtä pelitilannetta.
